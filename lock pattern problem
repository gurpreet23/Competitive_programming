#include <bits/stdc++.h>
using namespace std;

int skip[10][10];
int helper(vector<bool> &visited, int currDigit, int remainingDigits) {
	if(remainingDigits < 0) return 0;
	if(remainingDigits == 0) return 1;
	visited[currDigit] = true;
	int result = 0;
	for(int i=1;i<=9; i++) {
		if(not visited[i] and (skip[currDigit][i] == 0 or visited[skip[currDigit][i]] == true)) {
			result += helper(visited, i, remainingDigits-1);
		}
	}
	visited[currDigit] = false;
	return result;
}

int countPatterns(int m, int n) {
	for(int i=0;i<=9;i++) {
		for(int j=0;j<=9;j++) {
			skip[i][j] = 0;
		}
	}
	skip[1][3] = skip[3][1] = 2;
	skip[1][7] = skip[7][1] = 4;
	skip[9][3] = skip[3][9] = 6;
	skip[7][9] = skip[9][7] = 8;
	skip[1][9] = skip[9][1] = skip[3][7] = skip[7][3] = skip[2][8] = skip[8][2] = skip[4][6] = skip[6][4] = 5;

	vector<bool> visited(10, false);
	int result = 0;
	for(int i=m;i<=n;i++) {
		result += helper(visited, 1, i-1)*4;
		result += helper(visited, 2, i-1)*4;
		result += helper(visited, 5, i-1);
	}
	return result;
}


int main() {
	int m, n;
	cin>>m>>n;
	cout<<countPatterns(m,n);
	return 0;
}
