//policy based data structure (PBDS)
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;  //declare
int main() {
	//tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;  //declare
	pbds arr;
	
	for(int i=0;i<10;i++){
		arr.insert(i);
	}
	
	cout<<*(arr.find_by_order(0))<<endl;     //return oth largest element i.e smallest element
	cout<<*(arr.find_by_order(1))<<endl;
	cout<<*(arr.find_by_order(20))<<endl;
	cout<<arr.order_of_key(5)<<endl;            //will return how many elements are strictly lesser than 5
	return 0;
}
